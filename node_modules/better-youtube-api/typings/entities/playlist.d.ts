import { YouTube, Video, Thumbnail } from '..';
/**
 * A YouTube playlist.
 */
export declare class Playlist {
    /**
     * The name of the endpoint used for this entity.
     */
    static endpoint: string;
    /**
     * The parts to request for this entity.
     */
    static part: string;
    /**
     * The YouTube object that created this playlist.
     */
    youtube: YouTube;
    /**
     * The raw data of this playlist.
     */
    data: any;
    /**
     * Whether or not this is a full playlist object.
     */
    full: boolean;
    /**
     * The ID of this playlist.
     */
    id: string;
    /**
     * The title of the playlist.
     */
    title: string;
    /**
     * The description of the playlist.
     */
    description: string;
    /**
     * The videos in the playlist. Only available after calling `Playlist#fetchVideos()`.
     */
    videos: Video[];
    /**
     * The ID of the creator of the playlist.
     */
    creatorId: string;
    /**
     * The url of the playlist.
     */
    url: string;
    /**
     * The date the playlist was created.
     */
    dateCreated: Date;
    /**
     * The thumbnails for the playlist.
     */
    thumbnails: {
        default?: Thumbnail;
        high?: Thumbnail;
        maxres?: Thumbnail;
        medium?: Thumbnail;
        standard?: Thumbnail;
    };
    /**
     * The number of items in the playlist.
     */
    length: number;
    /**
     * An <iframe> tag that embeds a player that will play the playlist.
     */
    embedHtml: string;
    /**
     * The tags of the playlist.
     */
    tags: string[];
    constructor(youtube: YouTube, data: any);
    private _init;
    /**
     * Adds every video in this playlist to the `videos` property of this playlist.
     */
    fetchVideos(maxResults?: number): Promise<Video[]>;
    /**
     * Fetches this playlist and reassigns this object to the new playlist object.
     * Only useful if `this.full` is false, or if you want updated playlist info.
     */
    fetch(): Promise<this & Playlist>;
}
