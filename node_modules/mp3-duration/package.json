{
  "_from": "mp3-duration",
  "_id": "mp3-duration@1.1.0",
  "_inBundle": false,
  "_integrity": "sha1-wALk5FREgGCHNmCrtNp9EBGNDpw=",
  "_location": "/mp3-duration",
  "_phantomChildren": {},
  "_requested": {
    "escapedName": "mp3-duration",
    "fetchSpec": "latest",
    "name": "mp3-duration",
    "raw": "mp3-duration",
    "rawSpec": "",
    "registry": true,
    "saveSpec": null,
    "type": "tag"
  },
  "_requiredBy": [
    "#USER"
  ],
  "_resolved": "https://registry.npmjs.org/mp3-duration/-/mp3-duration-1.1.0.tgz",
  "_shasum": "c002e4e454448060873660abb4da7d10118d0e9c",
  "_spec": "mp3-duration",
  "_where": "C:\\Git\\WMI",
  "author": {
    "name": "Han de Boer"
  },
  "bugs": {
    "url": "https://github.com/ddsol/mp3-duration/issues"
  },
  "bundleDependencies": false,
  "dependencies": {
    "bluebird": "^3.5.1",
    "bluebird-co": "^2.2.0"
  },
  "deprecated": false,
  "description": "Get the duration of an MP3 file",
  "devDependencies": {
    "mocha": "^2.2.4",
    "nyc": "^11.2.1"
  },
  "engines": {
    "node": ">=0.11.0"
  },
  "homepage": "https://github.com/ddsol/mp3-duration",
  "keywords": [
    "audio",
    "duration",
    "file",
    "length",
    "mp3"
  ],
  "license": "MIT",
  "main": "index.js",
  "name": "mp3-duration",
  "optionalDependencies": {},
  "readme": "# mp3-duration ![Travis-Build](https://travis-ci.org/ddsol/mp3-duration.svg?branch=master)\n\n> Calculate duration of an MP3\n\n\n## Install\n\n```\n$ npm install --save mp3-duration\n```\n\n## Usage\n\n```javascript\nvar mp3Duration = require('mp3-duration');\n\nmp3Duration('file.mp3', function (err, duration) {\n  if (err) return console.log(err.message);\n  console.log('Your file is ' + duration + ' seconds long');\n});\n```\n\n## API\n\n## mp3Duration(filePathOrBuffer [, cbrEstimate] [, callback])\n\n### filePathOrBuffer\n\nType: `string` | `Buffer`\n\nPath to the file or a buffer with the file's contents\n\n### cbrEstimate\n\nDefaults to `false`. When set to `true`, will estimate the length of a\nconstant-bitrate mp3. This speeds up the calculation a lot but isn't\nguaranteed to be accurate.\n\n### callback(error, duration)\n\nType: `function`\n\nCallback to be called once duration is calculated. It's also possible to\ninstead use the returned `Promise`. `duration` is the duration of the\nmp3 in `ms`.\n\n### Return value\n\n`mp3Duration` returns a Promise that resolves to the duration of the mp3 in `ms` or rejects with some error.\n\n## License\n\nMIT Â© Han de Boer\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git://github.com/ddsol/mp3-duration.git"
  },
  "scripts": {
    "test": "mocha --harmony tests/test.js"
  },
  "version": "1.1.0"
}
